{"version":3,"sources":["components/Card.js","components/Header.js","components/NewCard.js","App.js","shuffle.js","index.js"],"names":["Card","props","form","className","onClick","showModal","position","index","editing","checkIfClicked","deleteCard","src","character","img","alt","name","occupation","Header","score","bestScore","setEditing","NewCard","React","useState","info","setInfo","handleOnChange","e","value","input","target","files","URL","createObjectURL","console","log","type","onChange","placeholder","setShow","makeNewCard","App","savedScore","JSON","parse","localStorage","getItem","def","show","defaultCharacters","setItem","stringify","characters","setCharacters","setScore","setBestScore","Array","length","fill","clicked","setClicked","endGame","prev","arr","slice","resetClicked","temp","splice","cards","map","key","uniqid","Modal","onHide","push","id","array","i","j","Math","floor","random","shuffle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa670093.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './css/Card.css'\r\nconst Card = (props) => {\r\n    \r\n\r\n    if(!props.form){\r\n        return(\r\n            <div className=\"card\" position={props.index} onClick={() =>{  \r\n                //Disables scoring when editing\r\n                if(!props.editing){\r\n                    return props.checkIfClicked(props.index)\r\n                }\r\n                return null\r\n                }}>\r\n                {props.editing ? <p onClick={() => props.deleteCard(props.index)} className=\"delete\"> x </p> : ''}\r\n                <div className=\"card-image\">\r\n                    <img src={props.character.img} alt=\"\" />\r\n                </div>\r\n                <div className=\"name\">\r\n                    <p>{props.character.name}</p>\r\n                </div>\r\n                <div className=\"occupation\">\r\n                    <p>{props.character.occupation}</p>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className=\"card make-new-card\" onClick={props.showModal}>\r\n                <p className=\"material-icons\"> add_circle_outline </p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport './css/Header.css'\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <div className=\"header\">\r\n            <p className=\"score\">Score: {props.score}</p>\r\n            <p className=\"best-score\" >Best Score: {props.bestScore}</p>\r\n            {props.editing ? \r\n            <p className=\"edit\" onClick={() => props.setEditing(false)}> Done </p>\r\n            :<p className=\"edit\" onClick={() => props.setEditing(true)}> Edit </p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport './css/NewCard.css'\r\nconst NewCard = (props) => {\r\n    const [info, setInfo] = React.useState({\r\n        img: '',\r\n        name: '',\r\n        occupation: '',\r\n    })\r\n\r\n    function handleOnChange(e) {\r\n        let input = e.target.name\r\n        let value;\r\n        if(e.target.files){\r\n            value = URL.createObjectURL(e.target.files[0])\r\n            console.log(value)\r\n        }else{\r\n            value = e.target.value\r\n        }\r\n        \r\n        setInfo({ ...info, [input]: value })\r\n    }\r\n\r\n    if(props.form){\r\n        \r\n    }\r\n    return (\r\n        <div className=\"makeNewCard\">\r\n            <input type=\"file\" name=\"img\"  onChange={handleOnChange} />\r\n            <br />\r\n            <input type=\"text\" name=\"name\" placeholder=\"Name\" onChange={handleOnChange} />\r\n            <br />\r\n            <input type=\"text\" name=\"occupation\" placeholder=\"Occupation\" onChange={handleOnChange} />\r\n            <br />\r\n            <button\r\n                type=\"submit\"\r\n                onClick={() => {\r\n                    props.setShow(false)\r\n                    props.makeNewCard(info)\r\n                }}\r\n            >\r\n                Make New Card!\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewCard\r\n","//Modal react bootstraqp\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Modal from 'react-bootstrap/Modal'\n\nimport React, { useState} from 'react';\nimport Card from './components/Card'\nimport Header from './components/Header'\nimport defaultCharacters from './characters.json'\nimport './App.css'\nimport shuffle from './shuffle'\nimport NewCard from './components/NewCard'\nimport uniqid from 'uniqid';\n\n\nfunction App() {\n\n  let savedScore = JSON.parse(localStorage.getItem('bestScore'))\n  if(savedScore === null){\n    savedScore = 0;\n  }\n    const [editing, setEditing] = useState(false)\n    const [show, setShow] = useState(false)\n\n    //check if user has added characters before\n    let def;\n  \n    if(localStorage.getItem('characters') !== null){\n      def = JSON.parse(localStorage.getItem('characters'))\n    }else{\n      def = defaultCharacters\n      localStorage.setItem('characters', JSON.stringify(def))\n    }\n    const [characters, setCharacters] = useState(def)\n    const [score, setScore] = useState(0)\n    const [bestScore, setBestScore] = useState(savedScore)\n    const [clicked, setClicked] = useState(Array(characters.length).fill(false))\n\n    const checkIfClicked = (index) => {\n      if(clicked[index]){\n\n        \n        endGame()\n      }else{\n        setScore(score + 1)\n        setClicked(prev => {\n          let arr = prev.slice()\n          arr[index] = true;\n          return arr;\n        })\n      }\n    }\n\n    const endGame = () => {\n      if(score > bestScore){\n        setBestScore(score)\n        localStorage.setItem('bestScore', JSON.stringify(score))\n      }\n      setScore(0)\n      resetClicked()\n    }\n\n    const resetClicked = () => {\n      setClicked(Array(characters.length).fill(false))\n    }\n\n    \n\n    const makeNewCard = (info) => {\n      endGame()\n      setCharacters(prev => {\n        let temp = prev.slice()\n        temp.push(\n          {\n            id: temp.length + 1,\n            name: info.name,\n            img: info.img,\n            occupation: info.occupation,\n          }\n        )\n        localStorage.setItem('characters',JSON.stringify(temp))\n        return temp\n      })\n      console.log('eh')\n      \n    }\n\n    function deleteCard(index){\n      let temp = characters.slice()\n      temp.splice(index, 1)\n      setCharacters(temp)\n      localStorage.setItem('characters',JSON.stringify(temp))\n    }\n\n\n    let cards = characters.map((character, index) => {\n      return(\n        <Card key={uniqid()} deleteCard={deleteCard} editing={editing} checkIfClicked={checkIfClicked} index={index} character={character}/>\n      )\n    })\n\n  return (\n    <>\n      <Header editing={editing} setEditing={setEditing} score={score} bestScore={bestScore} />\n      <div className=\"gameboard\">\n        <Modal show={show} onHide={() => setShow(false)}>\n          <NewCard makeNewCard={makeNewCard} setShow={setShow} />\n        </Modal>\n        {/* <div>{clicked.map((x) => x ? 'true' : 'false')}</div> */}\n        {editing ? cards : shuffle(cards) }\n        {editing ? <Card form={true} showModal={() => setShow(true)}/> : null}\n      </div>\n    </>\n    \n  );\n}\n\nexport default App;\n","export default function shuffle(array){\r\n    let arr = array.slice()\r\n    for(let i = arr.length - 1; i > 0; i--){\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n\r\n        \r\n        [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }\r\n    return(arr)\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}